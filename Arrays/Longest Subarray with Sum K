class Solution {
  public:
    int longestSubarray(vector<int>& arr, int k) {
        
       int n = arr.size();
       
       unordered_map<int,int>mpp;
       
       int len = 0;
       
       int maxlen = 0;
       
       int presum = 0;
       
       for(int i=0; i<n; i++)
       {
           presum += arr[i];
           
           if(presum == k)
           {
               maxlen = i+1;
           }
           else
           {
               int rem = presum - k;
               
             
               if(mpp.find(rem) != mpp.end())
               {
                    len = i - mpp[rem];
                   
                    maxlen = max(len,maxlen);
               }
           }
           
        if(mpp.find(presum) == mpp.end())   
            mpp[presum] = i;
       }
       
       return maxlen;
    }
};

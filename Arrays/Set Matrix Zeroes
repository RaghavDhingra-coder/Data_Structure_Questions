// Approach 1 (Better)

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        

        int n = matrix.size(); // number of rows
        int m = matrix[0].size(); // number of columns

        vector<int>rows(n,1);
        vector<int>colms(m,1);

        for(int i=0; i<n; i++)
        {
            for(int j=0; j<m; j++)
            {
                if(matrix[i][j] == 0)
                {
                    rows[i] = 0;
                    colms[j] = 0;
                }
            }
        }

        for(int i=0; i<n; i++)
        {
            for(int j=0; j<m; j++)
            {
                if(rows[i] == 0 || colms[j]  == 0)
                {
                    matrix[i][j] = 0;
                }
            }
        }


    }
};

// Optimized Approach

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        
        int n = matrix.size(); // number of rows
        int m = matrix[0].size(); // number of columns

        int col = 1;

        int el = matrix[0][0];

        for(int i=0; i<n; i++)
        {
            for(int j=0; j<m; j++)
            {
                if(matrix[i][j] == 0)
                {
                    matrix[i][0] = 0;

                    if(j == 0)
                    {
                        col = 0;
                    }
                    else
                    {
                        matrix[0][j] = 0;
                    }
                }
            }
        }

        for(int i = 1; i<n; i++)
        {
            for(int j = 1; j<m; j++)
            {
                if(matrix[i][0] == 0 || matrix[0][j] == 0)
                {
                    matrix[i][j] = 0;
                }
            }
        }

        if(matrix[0][0] == 0)
        {
            for(int i=1; i<m; i++)
            {
                matrix[0][i] = 0;
            }
        }

        if(col == 0)
        {
            for(int i=0; i<n; i++)
            {
                matrix[i][0] = 0;
            }
        }

    }
};



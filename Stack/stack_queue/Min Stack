class MinStack {
public:
    MinStack() {
        
    }

    stack<long long>stk;
    long long min;
    
    void push(int val) {
        
        if(stk.size() == 0)
        {
            stk.push(val);
            min = val;
        }
        else
        {
            if(val < min)
            {
                stk.push(((long)2*val-min));
                min = val;
            }
            else
            {
                stk.push(val);
            }
        }
    }
    
    void pop() {
        
        if(stk.size() == 0)
        {

        }
        else
        {
            if(stk.top() < min)
            {
                min = 2*min - stk.top();
                stk.pop();
            }
            else
            {
                stk.pop();
            }
        }
    }
    
    int top() {
        
        if(stk.size() == 0)
        {

        }
        else
        {
            if(stk.top() < min)
            {
                return min;
            }
            return stk.top();
        }
        return 1;
    }
    
    int getMin() {
        
        return min;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
